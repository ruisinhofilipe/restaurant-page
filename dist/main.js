(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>A});var i=t(537),a=t.n(i),o=t(645),r=t.n(o),d=t(667),s=t.n(d),l=new URL(t(36),t.b),c=r()(a()),p=s()(l);c.push([n.id,"* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    height: 100vh;\n    width: 100vw;\n    background-image: url("+p+");\n    background-attachment: fixed;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n}\n\n.mainContainer {\n    display: flex;\n    gap: 1rem;\n    flex-direction: column;\n    height: 100%;\n    width: 100%;\n    position: relative;\n}\n\n.loadPageTitleContainer {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 2rem;\n    width: 100%;\n    background-color: rgb(246, 233, 201, 0.6);\n    position: absolute;\n    top: 50%;\n}\n\n.menu {\n    width: 100%;\n    padding: 1rem;\n    background-color: rgb(0, 0, 0, 0.4);\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n}\n\n.menuLi {\n    display: flex;\n    justify-content: center;\n    min-width: 11%;\n    padding: 1rem;\n    color: black;\n    font-size: 1.5rem;\n    font-weight: bold;\n    background-color: rgb(246, 233, 201, 0.8);\n    border-radius: 1rem;\n}\n\n.menuLi:hover {\n    cursor: pointer;\n    background-color: rgba(248, 248, 248, 0.4);\n}\n\n.hidden {\n    display: none !important;\n}\n\n.menusContainer {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 1rem;\n    gap: 4rem;\n}\n\n.menusContainerLunch,\n.menusContainerDinner {\n    display: flex;\n    flex-direction: column;\n    width: 75%;\n    border-radius: 0.5rem;\n    padding: 1rem;\n    gap: 1rem;\n    background-color: rgb(246, 233, 201, 0.8);\n}\n\n.titleContainer {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    font-size: 1.1rem;\n    gap: 0.5rem;\n}\n\n.mealContainer {\n    display: flex;\n    gap: 1rem;\n    justify-content: space-evenly;\n    margin-bottom: 2.5rem;\n}\n\n.mealDivLunch,\n.mealDivDinner {\n    background-color: rgb(255, 255, 255, 0.5);\n    border-radius: 0.5rem;\n    width: 33%;\n    padding: 1rem;\n    gap: 1rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.mealIngredients,\n.mealPrice {\n    font-size: 1.3rem\n}\n\n.mealName {\n    font-size: 1.5rem;\n    font-weight: bold;\n}\n\n.contactUsContainer {\n    background-color: rgb(246, 233, 201, 0.8);\n    height: 100vh;\n    width: 100%;\n    display: grid;\n    grid-template-columns: 65% 35%;\n}\n\n.right {\n    display: grid;\n    grid-template-rows: 50% 50%;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,yDAA+C;IAC/C,4BAA4B;IAC5B,2BAA2B;IAC3B,4BAA4B;IAC5B,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,SAAS;IACT,sBAAsB;IACtB,YAAY;IACZ,WAAW;IACX,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,aAAa;IACb,WAAW;IACX,yCAAyC;IACzC,kBAAkB;IAClB,QAAQ;AACZ;;AAEA;IACI,WAAW;IACX,aAAa;IACb,mCAAmC;IACnC,aAAa;IACb,6BAA6B;IAC7B,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,cAAc;IACd,aAAa;IACb,YAAY;IACZ,iBAAiB;IACjB,iBAAiB;IACjB,yCAAyC;IACzC,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,0CAA0C;AAC9C;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,aAAa;IACb,SAAS;AACb;;AAEA;;IAEI,aAAa;IACb,sBAAsB;IACtB,UAAU;IACV,qBAAqB;IACrB,aAAa;IACb,SAAS;IACT,yCAAyC;AAC7C;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,iBAAiB;IACjB,WAAW;AACf;;AAEA;IACI,aAAa;IACb,SAAS;IACT,6BAA6B;IAC7B,qBAAqB;AACzB;;AAEA;;IAEI,yCAAyC;IACzC,qBAAqB;IACrB,UAAU;IACV,aAAa;IACb,SAAS;IACT,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;;AAEA;;IAEI;AACJ;;AAEA;IACI,iBAAiB;IACjB,iBAAiB;AACrB;;AAEA;IACI,yCAAyC;IACzC,aAAa;IACb,WAAW;IACX,aAAa;IACb,8BAA8B;AAClC;;AAEA;IACI,aAAa;IACb,2BAA2B;AAC/B",sourcesContent:["* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    height: 100vh;\n    width: 100vw;\n    background-image: url('./restaurant-front.jpg');\n    background-attachment: fixed;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n}\n\n.mainContainer {\n    display: flex;\n    gap: 1rem;\n    flex-direction: column;\n    height: 100%;\n    width: 100%;\n    position: relative;\n}\n\n.loadPageTitleContainer {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 2rem;\n    width: 100%;\n    background-color: rgb(246, 233, 201, 0.6);\n    position: absolute;\n    top: 50%;\n}\n\n.menu {\n    width: 100%;\n    padding: 1rem;\n    background-color: rgb(0, 0, 0, 0.4);\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n}\n\n.menuLi {\n    display: flex;\n    justify-content: center;\n    min-width: 11%;\n    padding: 1rem;\n    color: black;\n    font-size: 1.5rem;\n    font-weight: bold;\n    background-color: rgb(246, 233, 201, 0.8);\n    border-radius: 1rem;\n}\n\n.menuLi:hover {\n    cursor: pointer;\n    background-color: rgba(248, 248, 248, 0.4);\n}\n\n.hidden {\n    display: none !important;\n}\n\n.menusContainer {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 1rem;\n    gap: 4rem;\n}\n\n.menusContainerLunch,\n.menusContainerDinner {\n    display: flex;\n    flex-direction: column;\n    width: 75%;\n    border-radius: 0.5rem;\n    padding: 1rem;\n    gap: 1rem;\n    background-color: rgb(246, 233, 201, 0.8);\n}\n\n.titleContainer {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    font-size: 1.1rem;\n    gap: 0.5rem;\n}\n\n.mealContainer {\n    display: flex;\n    gap: 1rem;\n    justify-content: space-evenly;\n    margin-bottom: 2.5rem;\n}\n\n.mealDivLunch,\n.mealDivDinner {\n    background-color: rgb(255, 255, 255, 0.5);\n    border-radius: 0.5rem;\n    width: 33%;\n    padding: 1rem;\n    gap: 1rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.mealIngredients,\n.mealPrice {\n    font-size: 1.3rem\n}\n\n.mealName {\n    font-size: 1.5rem;\n    font-weight: bold;\n}\n\n.contactUsContainer {\n    background-color: rgb(246, 233, 201, 0.8);\n    height: 100vh;\n    width: 100%;\n    display: grid;\n    grid-template-columns: 65% 35%;\n}\n\n.right {\n    display: grid;\n    grid-template-rows: 50% 50%;\n}"],sourceRoot:""}]);const A=c},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",i=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),i&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),i&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,i,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var r={};if(i)for(var d=0;d<this.length;d++){var s=this[d][0];null!=s&&(r[s]=!0)}for(var l=0;l<n.length;l++){var c=[].concat(n[l]);i&&r[c[0]]||(void 0!==o&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=o),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),a&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=a):c[4]="".concat(a)),e.push(c))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),o="/*# ".concat(a," */");return[e].concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,i=0;i<e.length;i++)if(e[i].identifier===n){t=i;break}return t}function i(n,i){for(var o={},r=[],d=0;d<n.length;d++){var s=n[d],l=i.base?s[0]+i.base:s[0],c=o[l]||0,p="".concat(l," ").concat(c);o[l]=c+1;var A=t(p),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==A)e[A].references++,e[A].updater(u);else{var m=a(u,i);i.byIndex=d,e.splice(d,0,{identifier:p,updater:m,references:1})}r.push(p)}return r}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var o=i(n=n||[],a=a||{});return function(n){n=n||[];for(var r=0;r<o.length;r++){var d=t(o[r]);e[d].references--}for(var s=i(n,a),l=0;l<o.length;l++){var c=t(o[l]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}o=s}}},569:n=>{var e={};n.exports=function(n,t){var i=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var i="";t.supports&&(i+="@supports (".concat(t.supports,") {")),t.media&&(i+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(i+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),i+=t.css,a&&(i+="}"),t.media&&(i+="}"),t.supports&&(i+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(i,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},36:(n,e,t)=>{n.exports=t.p+"16df162bc73af82e1905.jpg"}},e={};function t(i){var a=e[i];if(void 0!==a)return a.exports;var o=e[i]={id:i,exports:{}};return n[i](o,o.exports,t),o.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var i in e)t.o(e,i)&&!t.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:e[i]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var i=e.getElementsByTagName("script");i.length&&(n=i[i.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),i=t(795),a=t.n(i),o=t(569),r=t.n(o),d=t(565),s=t.n(d),l=t(216),c=t.n(l),p=t(589),A=t.n(p),u=t(426),m={};function C(){const n=document.querySelector(".mainContainer");let e=n.lastElementChild;for(;e;)n.removeChild(e),e=n.lastElementChild;n.remove()}m.styleTagTransform=A(),m.setAttributes=s(),m.insert=r().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=c(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const h=(n,e,t)=>({build:()=>{let i=document.createElement(n);for(let n in e)i.setAttribute(n,e[n]);return i.textContent=t,i}});function b(){let n=document.querySelectorAll("li");return n.forEach((n=>{n.addEventListener("click",(()=>{1==n.id?(C(),g(),console.log("home")):2==n.id?(C(),(()=>{const n={"Caldo verde":{ingredients:"Soup made with potatoes, chouriço sausage, and thinly sliced collard greens or kale.",price:5},"Bacalhau com natas":{ingredients:"Baked cod (bacalhau) with onions, diced fried potatoes and double cream, seasoned with nutmeg and white pepper.",price:10},"Pastel de nata":{ingredients:"Custard tart made with puff pastry and filled with egg custard. Served with a dusting of powdered sugar and a pinch of cinnamon.",price:2}},e={Francesinha:{ingredients:"Sandwitch with slices of white loaf bread with ham, sausage, cheese, steak, french fries and special (served on a plate).",price:10},"Arroz de polvo":{ingredients:"Cooked diced octopus and rice, incorporated into a rich base of tomatoes, sautéed onions, garlic, and various spices.",price:12},"Prego no prato":{ingredients:"Rice, french fries, fried egg and beef steak.",price:9}},t=h("div",{class:"mainContainer"}).build();document.body.appendChild(t);const i=h("lu",{class:"menu"}).build();for(let n=1;n<=3;n++)if(1===n){const n=h("li",{class:"menuLi",id:1},"Home").build();i.appendChild(n)}else if(2===n){const n=h("li",{class:"menuLi",id:2},"Menu").build();i.appendChild(n)}else{const n=h("li",{class:"menuLi",id:3},"Contact us").build();i.appendChild(n)}t.appendChild(i);const a=h("div",{class:"menusContainer"}).build();t.appendChild(a);const o=h("div",{class:"menusContainerLunch"}).build();a.appendChild(o);const r=h("div",{class:"menusContainerDinner"}).build();a.appendChild(r);const d=h("div",{class:"titleContainer"}).build();o.appendChild(d);const s=h("h2").build();s.textContent="Lunch",d.appendChild(s);const l=h("p").build();l.textContent="11:30am - 4pm",d.appendChild(l);const c=h("div",{class:"mealContainer"}).build();o.append(c);for(let n=1;n<=3;n++){const e=h("div",{class:"mealDivLunch",id:n}).build();c.appendChild(e)}document.querySelectorAll(".mealDivLunch").forEach((e=>{if(1==e.id){const t=h("div",{class:"mealName"}).build();t.textContent=Object.keys(n)[0],e.appendChild(t);const i=h("p",{class:"mealIngredients"}).build();i.textContent=n["Caldo verde"].ingredients,e.appendChild(i);const a=h("p",{class:"mealPrice"}).build();a.textContent=`${n["Caldo verde"].price}$`,e.appendChild(a)}else if(2==e.id){const t=h("div",{class:"mealName"}).build();t.textContent=Object.keys(n)[1],e.appendChild(t);const i=h("p",{class:"mealIngredients"}).build();i.textContent=n["Bacalhau com natas"].ingredients,e.appendChild(i);const a=h("p",{class:"mealPrice"}).build();a.textContent=`${n["Bacalhau com natas"].price}$`,e.appendChild(a)}else{const t=h("div",{class:"mealName"}).build();t.textContent=Object.keys(n)[2],e.appendChild(t);const i=h("p",{class:"mealIngredients"}).build();i.textContent=n["Pastel de nata"].ingredients,e.appendChild(i);const a=h("p",{class:"mealPrice"}).build();a.textContent=`${n["Pastel de nata"].price}$`,e.appendChild(a)}}));const p=h("div",{class:"titleContainer"}).build();r.appendChild(p);const A=h("h2").build();A.textContent="Dinner",p.appendChild(A);const u=h("p").build();u.textContent="6pm - 23pm",p.appendChild(u);const m=h("div",{class:"mealContainer"}).build();r.append(m);for(let n=1;n<=3;n++){const e=h("div",{class:"mealDivDinner",id:n}).build();m.appendChild(e)}document.querySelectorAll(".mealDivDinner").forEach((n=>{if(1==n.id){const t=h("div",{class:"mealName"}).build();t.textContent=Object.keys(e)[0],n.appendChild(t);const i=h("p",{class:"mealIngredients"}).build();i.textContent=e.Francesinha.ingredients,n.appendChild(i);const a=h("p",{class:"mealPrice"}).build();a.textContent=`${e.Francesinha.price}$`,n.appendChild(a)}else if(2==n.id){const t=h("div",{class:"mealName"}).build();t.textContent=Object.keys(e)[1],n.appendChild(t);const i=h("p",{class:"mealIngredients"}).build();i.textContent=e["Arroz de polvo"].ingredients,n.appendChild(i);const a=h("p",{class:"mealPrice"}).build();a.textContent=`${e["Arroz de polvo"].price}$`,n.appendChild(a)}else{const t=h("div",{class:"mealName"}).build();t.textContent=Object.keys(e)[2],n.appendChild(t);const i=h("p",{class:"mealIngredients"}).build();i.textContent=e["Prego no prato"].ingredients,n.appendChild(i);const a=h("p",{class:"mealPrice"}).build();a.textContent=`${e["Prego no prato"].price}$`,n.appendChild(a)}})),b()})(),console.log("Menu")):(C(),(()=>{const n=h("div",{class:"mainContainer"}).build();document.body.appendChild(n);const e=h("lu",{class:"menu"}).build();for(let n=1;n<=3;n++)if(1===n){const n=h("li",{class:"menuLi",id:1},"Home").build();e.appendChild(n)}else if(2===n){const n=h("li",{class:"menuLi",id:2},"Menu").build();e.appendChild(n)}else{const n=h("li",{class:"menuLi",id:3},"Contact us").build();e.appendChild(n)}n.appendChild(e);const t=h("div",{class:"contactUsContainer"}).build(),i=h("div",{class:"locationContainer left"},"location").build(),a=h("div",{class:"infoContainer right"}).build(),o=h("lu",{class:"OpeningHoursContainer"},"Opening-hours").build();for(let n=1;n<=7;n++){const e=h("li",{class:"openingDays"}).build();switch(n){case 1:e.textContent="Monday: closed.";break;case 2:e.textContent="Tuesday: 6pm - 23pm";break;case 3:e.textContent="Wednesday: 11:30am - 4pm and 6pm - 23pm";break;case 4:e.textContent="Thursday: 11:30am - 4pm and 6pm - 23pm";break;case 5:e.textContent="Friday: 11:30am - 4pm and 6pm - 1am";break;case 6:e.textContent="Saturday: 11:30am - 4pm and 6pm - 1am";break;case 7:e.textContent="Sunday: 4pm - 22pm";break;default:e.textContent="Something went wrong"}o.appendChild(e)}const r=h("div",{class:"contactContainer"},"Contact info").build();for(let n=1;n<=2;n++){const e=h("div",{class:"info"}).build();e.textContent=1===n?"Email address: fakeRestaurantEmail@fake.fake":"Phone number = +0 000 000 000",r.appendChild(e)}a.appendChild(o),a.appendChild(r),t.appendChild(i),t.appendChild(a),n.appendChild(t),b()})(),console.log("Contact us content will be displayed ..."))}))})),{liNode:n}}const g=()=>{const n=h("div",{class:"mainContainer"}).build();document.body.appendChild(n);const e=h("lu",{class:"menu"}).build();for(let n=1;n<=3;n++)if(1===n){const n=h("li",{class:"menuLi",id:1},"Home").build();e.appendChild(n)}else if(2===n){const n=h("li",{class:"menuLi",id:2},"Menu").build();e.appendChild(n)}else{const n=h("li",{class:"menuLi",id:3},"Contact us").build();e.appendChild(n)}n.appendChild(e);const t=h("div",{class:"loadPageTitleContainer"}).build(),i=h("h1").build();i.textContent="Welcome to Da Silva's restaurant!",t.appendChild(i),n.appendChild(t),b()};g()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,